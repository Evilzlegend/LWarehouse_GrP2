// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;
using LesliesWarehouseAPI.Models;

#nullable disable

namespace LesliesWarehouseAPI.Data
{
    public partial class LeslieswarehouseContext : DbContext
    {
        public LeslieswarehouseContext()
        {
        }

        public LeslieswarehouseContext(DbContextOptions<LeslieswarehouseContext> options)
            : base(options)
        {
        }

        public virtual DbSet<EditRequest> EditRequests { get; set; }
        public virtual DbSet<Employee> Employees { get; set; }
        public virtual DbSet<PunchIn> PunchIns { get; set; }
        public virtual DbSet<PunchOut> PunchOuts { get; set; }
        public virtual DbSet<Title> Titles { get; set; }
        public virtual DbSet<Warning> Warnings { get; set; }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.HasAnnotation("Relational:Collation", "SQL_Latin1_General_CP1_CI_AS");

            modelBuilder.Entity<EditRequest>(entity =>
            {
                entity.HasKey(e => e.RequestId);

                entity.Property(e => e.RequestId)
                    .ValueGeneratedNever()
                    .HasColumnName("RequestID");

                entity.Property(e => e.EmployeeId).HasColumnName("EmployeeID");

                entity.Property(e => e.RequestDate).HasColumnType("date");

                entity.Property(e => e.RequestDescription).HasMaxLength(255);

                entity.Property(e => e.RequestType).HasMaxLength(255);

                entity.HasOne(d => d.Employee)
                    .WithMany(p => p.EditRequests)
                    .HasForeignKey(d => d.EmployeeId)
                    .HasConstraintName("FK_EditRequests_Employees");
            });

            modelBuilder.Entity<Employee>(entity =>
            {
                entity.Property(e => e.EmployeeId)
                    .ValueGeneratedNever()
                    .HasColumnName("EmployeeID");

                entity.Property(e => e.EmpCity).HasMaxLength(255);

                entity.Property(e => e.EmpDob)
                    .HasColumnType("date")
                    .HasColumnName("EmpDOB");

                entity.Property(e => e.EmpHiredOnDate).HasColumnType("date");

                entity.Property(e => e.EmpLastName).HasMaxLength(255);

                entity.Property(e => e.EmpName).HasMaxLength(255);

                entity.Property(e => e.EmpState).HasMaxLength(255);

                entity.Property(e => e.EmpStreet).HasMaxLength(255);
            });

            modelBuilder.Entity<PunchIn>(entity =>
            {
                entity.Property(e => e.PunchInId)
                    .ValueGeneratedNever()
                    .HasColumnName("PunchInID");

                entity.Property(e => e.EmployeeId).HasColumnName("EmployeeID");

                entity.Property(e => e.PunchInDate).HasColumnType("date");

                entity.Property(e => e.PunchInTime).HasColumnType("time(0)");

                entity.Property(e => e.PunchInType).HasMaxLength(255);

                entity.HasOne(d => d.Employee)
                    .WithMany(p => p.PunchIns)
                    .HasForeignKey(d => d.EmployeeId)
                    .HasConstraintName("FK_PunchIns_Employees");
            });

            modelBuilder.Entity<PunchOut>(entity =>
            {
                entity.Property(e => e.PunchOutId)
                    .ValueGeneratedNever()
                    .HasColumnName("PunchOutID");

                entity.Property(e => e.EmployeeId).HasColumnName("EmployeeID");

                entity.Property(e => e.PunchOutDate).HasColumnType("date");

                entity.Property(e => e.PunchOutTime).HasColumnType("time(0)");

                entity.Property(e => e.PunchOutType).HasMaxLength(255);

                entity.HasOne(d => d.Employee)
                    .WithMany(p => p.PunchOuts)
                    .HasForeignKey(d => d.EmployeeId)
                    .HasConstraintName("FK_PunchOuts_Employees");
            });

            modelBuilder.Entity<Title>(entity =>
            {
                entity.Property(e => e.TitleId)
                    .ValueGeneratedNever()
                    .HasColumnName("TitleID");

                entity.Property(e => e.EmployeeId).HasColumnName("EmployeeID");

                entity.Property(e => e.TitleName).HasMaxLength(255);

                entity.HasOne(d => d.Employee)
                    .WithMany(p => p.Titles)
                    .HasForeignKey(d => d.EmployeeId)
                    .HasConstraintName("FK_Titles_Employees");
            });

            modelBuilder.Entity<Warning>(entity =>
            {
                entity.Property(e => e.WarningId)
                    .ValueGeneratedNever()
                    .HasColumnName("WarningID");

                entity.Property(e => e.EmployeeId).HasColumnName("EmployeeID");

                entity.Property(e => e.WarningDate).HasColumnType("date");

                entity.Property(e => e.WarningDescription).HasMaxLength(255);

                entity.Property(e => e.WarningType).HasMaxLength(255);

                entity.HasOne(d => d.Employee)
                    .WithMany(p => p.Warnings)
                    .HasForeignKey(d => d.EmployeeId)
                    .HasConstraintName("FK_Warnings_Employees");
            });

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}